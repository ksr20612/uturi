"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js+file-upload@1.21.7";
exports.ids = ["vendor-chunks/@zag-js+file-upload@1.21.7"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@zag-js+file-upload@1.21.7/node_modules/@zag-js/file-upload/dist/index.mjs":
/*!***********************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@zag-js+file-upload@1.21.7/node_modules/@zag-js/file-upload/dist/index.mjs ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/../../node_modules/.pnpm/@zag-js+anatomy@1.21.7/node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/../../node_modules/.pnpm/@zag-js+dom-query@1.21.7/node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/file-utils */ \"(ssr)/../../node_modules/.pnpm/@zag-js+file-utils@1.21.7/node_modules/@zag-js/file-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_i18n_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/i18n-utils */ \"(ssr)/../../node_modules/.pnpm/@zag-js+i18n-utils@1.21.7/node_modules/@zag-js/i18n-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/../../node_modules/.pnpm/@zag-js+types@1.21.7/node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/../../node_modules/.pnpm/@zag-js+utils@1.21.7/node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/../../node_modules/.pnpm/@zag-js+core@1.21.7/node_modules/@zag-js/core/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/file-upload.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"file-upload\").parts(\n  \"root\",\n  \"dropzone\",\n  \"item\",\n  \"itemDeleteTrigger\",\n  \"itemGroup\",\n  \"itemName\",\n  \"itemPreview\",\n  \"itemPreviewImage\",\n  \"itemSizeText\",\n  \"label\",\n  \"trigger\",\n  \"clearTrigger\"\n);\nvar parts = anatomy.build();\n\n// src/file-upload.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `file:${ctx.id}`;\nvar getDropzoneId = (ctx) => ctx.ids?.dropzone ?? `file:${ctx.id}:dropzone`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `file:${ctx.id}:input`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `file:${ctx.id}:trigger`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `file:${ctx.id}:label`;\nvar getItemId = (ctx, id) => ctx.ids?.item?.(id) ?? `file:${ctx.id}:item:${id}`;\nvar getItemNameId = (ctx, id) => ctx.ids?.itemName?.(id) ?? `file:${ctx.id}:item-name:${id}`;\nvar getItemSizeTextId = (ctx, id) => ctx.ids?.itemSizeText?.(id) ?? `file:${ctx.id}:item-size:${id}`;\nvar getItemPreviewId = (ctx, id) => ctx.ids?.itemPreview?.(id) ?? `file:${ctx.id}:item-preview:${id}`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\nvar getDropzoneEl = (ctx) => ctx.getById(getDropzoneId(ctx));\nfunction isEventWithFiles(event) {\n  const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n  if (!event.dataTransfer) return !!target && \"files\" in target;\n  return event.dataTransfer.types.some((type) => {\n    return type === \"Files\" || type === \"application/x-moz-file\";\n  });\n}\nfunction isFilesWithinRange(ctx, incomingCount, currentAcceptedFiles) {\n  const { prop, computed } = ctx;\n  if (!computed(\"multiple\") && incomingCount > 1) return false;\n  if (!computed(\"multiple\") && incomingCount + currentAcceptedFiles.length === 2) return true;\n  if (incomingCount + currentAcceptedFiles.length > prop(\"maxFiles\")) return false;\n  return true;\n}\nfunction getEventFiles(ctx, files, currentAcceptedFiles = [], currentRejectedFiles = []) {\n  const { prop, computed } = ctx;\n  const acceptedFiles = [];\n  const rejectedFiles = [];\n  const validateParams = {\n    acceptedFiles: currentAcceptedFiles,\n    rejectedFiles: currentRejectedFiles\n  };\n  files.forEach((file) => {\n    const [accepted, acceptError] = (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isValidFileType)(file, computed(\"acceptAttr\"));\n    const [sizeMatch, sizeError] = (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isValidFileSize)(file, prop(\"minFileSize\"), prop(\"maxFileSize\"));\n    const validateErrors = prop(\"validate\")?.(file, validateParams);\n    const valid = validateErrors ? validateErrors.length === 0 : true;\n    if (accepted && sizeMatch && valid) {\n      acceptedFiles.push(file);\n    } else {\n      const errors = [acceptError, sizeError];\n      if (!valid) errors.push(...validateErrors ?? []);\n      rejectedFiles.push({ file, errors: errors.filter(Boolean) });\n    }\n  });\n  if (!isFilesWithinRange(ctx, acceptedFiles.length, currentAcceptedFiles)) {\n    acceptedFiles.forEach((file) => {\n      rejectedFiles.push({ file, errors: [\"TOO_MANY_FILES\"] });\n    });\n    acceptedFiles.splice(0);\n  }\n  return {\n    acceptedFiles,\n    rejectedFiles\n  };\n}\nfunction setInputFiles(inputEl, files) {\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getWindow)(inputEl);\n  try {\n    if (\"DataTransfer\" in win) {\n      const dataTransfer = new win.DataTransfer();\n      files.forEach((file) => {\n        dataTransfer.items.add(file);\n      });\n      inputEl.files = dataTransfer.files;\n    }\n  } catch {\n  }\n}\n\n// src/file-upload.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, computed, scope, context } = service;\n  const disabled = prop(\"disabled\");\n  const allowDrop = prop(\"allowDrop\");\n  const translations = prop(\"translations\");\n  const dragging = state.matches(\"dragging\");\n  const focused = state.matches(\"focused\") && !disabled;\n  return {\n    dragging,\n    focused,\n    disabled: !!disabled,\n    transforming: context.get(\"transforming\"),\n    openFilePicker() {\n      if (disabled) return;\n      send({ type: \"OPEN\" });\n    },\n    deleteFile(file) {\n      send({ type: \"FILE.DELETE\", file });\n    },\n    acceptedFiles: context.get(\"acceptedFiles\"),\n    rejectedFiles: context.get(\"rejectedFiles\"),\n    setFiles(files) {\n      send({ type: \"FILES.SET\", files, count: files.length });\n    },\n    clearRejectedFiles() {\n      send({ type: \"REJECTED_FILES.CLEAR\" });\n    },\n    clearFiles() {\n      send({ type: \"FILES.CLEAR\" });\n    },\n    getFileSize(file) {\n      return (0,_zag_js_i18n_utils__WEBPACK_IMPORTED_MODULE_3__.formatBytes)(file.size, prop(\"locale\"));\n    },\n    createFileUrl(file, cb) {\n      const win = scope.getWin();\n      const url = win.URL.createObjectURL(file);\n      cb(url);\n      return () => win.URL.revokeObjectURL(url);\n    },\n    setClipboardFiles(dt) {\n      if (disabled) return false;\n      const items = Array.from(dt?.items ?? []);\n      const files = items.reduce((acc, item) => {\n        if (item.kind !== \"file\") return acc;\n        const file = item.getAsFile();\n        if (!file) return acc;\n        return [...acc, file];\n      }, []);\n      if (!files.length) return false;\n      send({ type: \"FILES.SET\", files });\n      return true;\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging)\n      });\n    },\n    getDropzoneProps(props2 = {}) {\n      return normalize.element({\n        ...parts.dropzone.attrs,\n        dir: prop(\"dir\"),\n        id: getDropzoneId(scope),\n        tabIndex: disabled || props2.disableClick ? void 0 : 0,\n        role: props2.disableClick ? \"application\" : \"button\",\n        \"aria-label\": translations.dropzone,\n        \"aria-disabled\": disabled,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        onKeyDown(event) {\n          if (disabled) return;\n          if (event.defaultPrevented) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          if (props2.disableClick) return;\n          if (event.key !== \"Enter\" && event.key !== \" \") return;\n          send({ type: \"DROPZONE.CLICK\", src: \"keydown\" });\n        },\n        onClick(event) {\n          if (disabled) return;\n          if (event.defaultPrevented) return;\n          if (props2.disableClick) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          if (event.currentTarget.localName === \"label\") {\n            event.preventDefault();\n          }\n          send({ type: \"DROPZONE.CLICK\" });\n        },\n        onDragOver(event) {\n          if (disabled) return;\n          if (!allowDrop) return;\n          event.preventDefault();\n          event.stopPropagation();\n          try {\n            event.dataTransfer.dropEffect = \"copy\";\n          } catch {\n          }\n          const hasFiles = isEventWithFiles(event);\n          if (!hasFiles) return;\n          const count = event.dataTransfer.items.length;\n          send({ type: \"DROPZONE.DRAG_OVER\", count });\n        },\n        onDragLeave(event) {\n          if (disabled) return;\n          if (!allowDrop) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(event.currentTarget, event.relatedTarget)) return;\n          send({ type: \"DROPZONE.DRAG_LEAVE\" });\n        },\n        onDrop(event) {\n          if (disabled) return;\n          if (allowDrop) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n          const hasFiles = isEventWithFiles(event);\n          if (disabled || !hasFiles) return;\n          (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.getFileEntries)(event.dataTransfer.items, prop(\"directory\")).then((files) => {\n            send({ type: \"DROPZONE.DROP\", files: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.flatArray)(files) });\n          });\n        },\n        onFocus() {\n          if (disabled) return;\n          send({ type: \"DROPZONE.FOCUS\" });\n        },\n        onBlur() {\n          if (disabled) return;\n          send({ type: \"DROPZONE.BLUR\" });\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        id: getTriggerId(scope),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        type: \"button\",\n        onClick(event) {\n          if (disabled) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(getDropzoneEl(scope), event.currentTarget)) {\n            event.stopPropagation();\n          }\n          send({ type: \"OPEN\" });\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: getHiddenInputId(scope),\n        tabIndex: -1,\n        disabled,\n        type: \"file\",\n        required: prop(\"required\"),\n        capture: prop(\"capture\"),\n        name: prop(\"name\"),\n        accept: computed(\"acceptAttr\"),\n        webkitdirectory: prop(\"directory\") ? \"\" : void 0,\n        multiple: computed(\"multiple\") || prop(\"maxFiles\") > 1,\n        onClick(event) {\n          event.stopPropagation();\n          event.currentTarget.value = \"\";\n        },\n        onInput(event) {\n          if (disabled) return;\n          const { files } = event.currentTarget;\n          send({ type: \"FILE.SELECT\", files: files ? Array.from(files) : [] });\n        },\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle\n      });\n    },\n    getItemGroupProps() {\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        id: getItemId(scope, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemNameProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemName.attrs,\n        dir: prop(\"dir\"),\n        id: getItemNameId(scope, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemSizeTextProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemSizeText.attrs,\n        dir: prop(\"dir\"),\n        id: getItemSizeTextId(scope, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemPreviewProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemPreview.attrs,\n        dir: prop(\"dir\"),\n        id: getItemPreviewId(scope, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemPreviewImageProps(props2) {\n      const { file, url } = props2;\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        throw new Error(\"Preview Image is only supported for image files\");\n      }\n      return normalize.img({\n        ...parts.itemPreviewImage.attrs,\n        alt: translations.itemPreview?.(file),\n        src: url,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemDeleteTriggerProps(props2) {\n      const { file } = props2;\n      return normalize.button({\n        ...parts.itemDeleteTrigger.attrs,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-label\": translations.deleteFile?.(file),\n        onClick() {\n          if (disabled) return;\n          send({ type: \"FILE.DELETE\", file });\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        htmlFor: getHiddenInputId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        disabled,\n        hidden: context.get(\"acceptedFiles\").length === 0,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          send({ type: \"FILES.CLEAR\" });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      minFileSize: 0,\n      maxFileSize: Number.POSITIVE_INFINITY,\n      maxFiles: 1,\n      allowDrop: true,\n      preventDocumentDrop: true,\n      defaultAcceptedFiles: [],\n      ...props2,\n      translations: {\n        dropzone: \"dropzone\",\n        itemPreview: (file) => `preview of ${file.name}`,\n        deleteFile: (file) => `delete file ${file.name}`,\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getContext }) {\n    return {\n      acceptedFiles: bindable(() => ({\n        defaultValue: prop(\"defaultAcceptedFiles\"),\n        value: prop(\"acceptedFiles\"),\n        isEqual: (a, b) => a.length === b?.length && a.every((file, i) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(file, b[i])),\n        hash(value) {\n          return value.map((file) => `${file.name}-${file.size}`).join(\",\");\n        },\n        onChange(value) {\n          const ctx = getContext();\n          prop(\"onFileAccept\")?.({ files: value });\n          prop(\"onFileChange\")?.({ acceptedFiles: value, rejectedFiles: ctx.get(\"rejectedFiles\") });\n        }\n      })),\n      rejectedFiles: bindable(() => ({\n        defaultValue: [],\n        isEqual: (a, b) => a.length === b?.length && a.every((file, i) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(file.file, b[i].file)),\n        onChange(value) {\n          const ctx = getContext();\n          prop(\"onFileReject\")?.({ files: value });\n          prop(\"onFileChange\")?.({ acceptedFiles: ctx.get(\"acceptedFiles\"), rejectedFiles: value });\n        }\n      })),\n      transforming: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    acceptAttr: ({ prop }) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.getAcceptAttrString)(prop(\"accept\")),\n    multiple: ({ prop }) => prop(\"maxFiles\") > 1\n  },\n  watch({ track, context, action }) {\n    track([() => context.hash(\"acceptedFiles\")], () => {\n      action([\"syncInputElement\"]);\n    });\n  },\n  on: {\n    \"FILES.SET\": {\n      actions: [\"setFiles\"]\n    },\n    \"FILE.SELECT\": {\n      actions: [\"setEventFiles\"]\n    },\n    \"FILE.DELETE\": {\n      actions: [\"removeFile\"]\n    },\n    \"FILES.CLEAR\": {\n      actions: [\"clearFiles\"]\n    },\n    \"REJECTED_FILES.CLEAR\": {\n      actions: [\"clearRejectedFiles\"]\n    }\n  },\n  effects: [\"preventDocumentDrop\"],\n  states: {\n    idle: {\n      on: {\n        OPEN: {\n          actions: [\"openFilePicker\"]\n        },\n        \"DROPZONE.CLICK\": {\n          actions: [\"openFilePicker\"]\n        },\n        \"DROPZONE.FOCUS\": {\n          target: \"focused\"\n        },\n        \"DROPZONE.DRAG_OVER\": {\n          target: \"dragging\"\n        }\n      }\n    },\n    focused: {\n      on: {\n        \"DROPZONE.BLUR\": {\n          target: \"idle\"\n        },\n        OPEN: {\n          actions: [\"openFilePicker\"]\n        },\n        \"DROPZONE.CLICK\": {\n          actions: [\"openFilePicker\"]\n        },\n        \"DROPZONE.DRAG_OVER\": {\n          target: \"dragging\"\n        }\n      }\n    },\n    dragging: {\n      on: {\n        \"DROPZONE.DROP\": {\n          target: \"idle\",\n          actions: [\"setEventFiles\"]\n        },\n        \"DROPZONE.DRAG_LEAVE\": {\n          target: \"idle\"\n        }\n      }\n    }\n  },\n  implementations: {\n    effects: {\n      preventDocumentDrop({ prop, scope }) {\n        if (!prop(\"preventDocumentDrop\")) return;\n        if (!prop(\"allowDrop\")) return;\n        if (prop(\"disabled\")) return;\n        const doc = scope.getDoc();\n        const onDragOver = (event) => {\n          event?.preventDefault();\n        };\n        const onDrop = (event) => {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(getRootEl(scope), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event))) return;\n          event.preventDefault();\n        };\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.callAll)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"dragover\", onDragOver, false), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"drop\", onDrop, false));\n      }\n    },\n    actions: {\n      syncInputElement({ scope, context }) {\n        queueMicrotask(() => {\n          const inputEl = getHiddenInputEl(scope);\n          if (!inputEl) return;\n          setInputFiles(inputEl, context.get(\"acceptedFiles\"));\n          const win = scope.getWin();\n          inputEl.dispatchEvent(new win.Event(\"change\", { bubbles: true }));\n        });\n      },\n      openFilePicker({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getHiddenInputEl(scope)?.click();\n        });\n      },\n      setFiles(params) {\n        const { computed, context, event } = params;\n        const { acceptedFiles, rejectedFiles } = getEventFiles(params, event.files);\n        context.set(\n          \"acceptedFiles\",\n          computed(\"multiple\") ? acceptedFiles : acceptedFiles.length > 0 ? [acceptedFiles[0]] : []\n        );\n        context.set(\"rejectedFiles\", rejectedFiles);\n      },\n      setEventFiles(params) {\n        const { computed, context, event, prop } = params;\n        const currentAcceptedFiles = context.get(\"acceptedFiles\");\n        const currentRejectedFiles = context.get(\"rejectedFiles\");\n        const { acceptedFiles, rejectedFiles } = getEventFiles(\n          params,\n          event.files,\n          currentAcceptedFiles,\n          currentRejectedFiles\n        );\n        const set = (files) => {\n          if (computed(\"multiple\")) {\n            context.set(\"acceptedFiles\", (prev) => [...prev, ...files]);\n            context.set(\"rejectedFiles\", rejectedFiles);\n            return;\n          }\n          if (files.length) {\n            context.set(\"acceptedFiles\", [files[0]]);\n            context.set(\"rejectedFiles\", rejectedFiles);\n            return;\n          }\n          if (rejectedFiles.length) {\n            context.set(\"acceptedFiles\", context.get(\"acceptedFiles\"));\n            context.set(\"rejectedFiles\", rejectedFiles);\n          }\n        };\n        const transform = prop(\"transformFiles\");\n        if (transform) {\n          context.set(\"transforming\", true);\n          transform(acceptedFiles).then(set).catch((err) => {\n            (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.warn)(`[zag-js/file-upload] error transforming files\n${err}`);\n          }).finally(() => {\n            context.set(\"transforming\", false);\n          });\n        } else {\n          set(acceptedFiles);\n        }\n      },\n      removeFile({ context, event }) {\n        const files = context.get(\"acceptedFiles\").filter((file) => !(0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(file, event.file));\n        const rejectedFiles = context.get(\"rejectedFiles\").filter((item) => !(0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(item.file, event.file));\n        context.set(\"acceptedFiles\", files);\n        context.set(\"rejectedFiles\", rejectedFiles);\n      },\n      clearRejectedFiles({ context }) {\n        context.set(\"rejectedFiles\", []);\n      },\n      clearFiles({ context }) {\n        context.set(\"acceptedFiles\", []);\n        context.set(\"rejectedFiles\", []);\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"accept\",\n  \"acceptedFiles\",\n  \"allowDrop\",\n  \"capture\",\n  \"defaultAcceptedFiles\",\n  \"dir\",\n  \"directory\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"locale\",\n  \"maxFiles\",\n  \"maxFileSize\",\n  \"minFileSize\",\n  \"name\",\n  \"onFileAccept\",\n  \"onFileChange\",\n  \"onFileReject\",\n  \"preventDocumentDrop\",\n  \"required\",\n  \"transformFiles\",\n  \"translations\",\n  \"validate\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\"file\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@zag-js+file-upload@1.21.7/node_modules/@zag-js/file-upload/dist/index.mjs\n");

/***/ })

};
;