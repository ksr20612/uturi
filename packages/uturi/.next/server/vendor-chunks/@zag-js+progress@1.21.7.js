"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js+progress@1.21.7";
exports.ids = ["vendor-chunks/@zag-js+progress@1.21.7"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@zag-js+progress@1.21.7/node_modules/@zag-js/progress/dist/index.mjs":
/*!*****************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@zag-js+progress@1.21.7/node_modules/@zag-js/progress/dist/index.mjs ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/../../node_modules/.pnpm/@zag-js+anatomy@1.21.7/node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/../../node_modules/.pnpm/@zag-js+core@1.21.7/node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/../../node_modules/.pnpm/@zag-js+utils@1.21.7/node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/../../node_modules/.pnpm/@zag-js+types@1.21.7/node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n// src/progress.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"progress\").parts(\n  \"root\",\n  \"label\",\n  \"track\",\n  \"range\",\n  \"valueText\",\n  \"view\",\n  \"circle\",\n  \"circleTrack\",\n  \"circleRange\"\n);\nvar parts = anatomy.build();\n\n// src/progress.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `progress-${ctx.id}`;\nvar getTrackId = (ctx) => ctx.ids?.track ?? `progress-${ctx.id}-track`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `progress-${ctx.id}-label`;\nvar getCircleId = (ctx) => ctx.ids?.circle ?? `progress-${ctx.id}-circle`;\n\n// src/progress.connect.ts\nfunction connect(service, normalize) {\n  const { context, computed, prop, send, scope } = service;\n  const percent = computed(\"percent\");\n  const percentAsString = computed(\"isIndeterminate\") ? \"\" : computed(\"formatter\").format(percent / 100);\n  const max = prop(\"max\");\n  const min = prop(\"min\");\n  const orientation = prop(\"orientation\");\n  const translations = prop(\"translations\");\n  const indeterminate = computed(\"isIndeterminate\");\n  const value = context.get(\"value\");\n  const valueAsString = translations?.value({ value, max, percent, min, formatter: computed(\"formatter\") }) ?? \"\";\n  const progressState = getProgressState(value, max);\n  const progressbarProps = {\n    role: \"progressbar\",\n    \"aria-label\": valueAsString,\n    \"data-max\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value ?? void 0,\n    \"data-orientation\": orientation,\n    \"data-state\": progressState\n  };\n  const circleProps2 = getCircleProps(service);\n  return {\n    value,\n    valueAsString,\n    min,\n    max,\n    percent,\n    percentAsString,\n    indeterminate,\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: value2 });\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: max });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: min });\n    },\n    getRootProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.root.attrs,\n        id: getRootId(scope),\n        \"data-max\": max,\n        \"data-value\": value ?? void 0,\n        \"data-state\": progressState,\n        \"data-orientation\": orientation,\n        style: {\n          \"--percent\": indeterminate ? void 0 : percent\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        ...parts.label.attrs,\n        \"data-orientation\": orientation\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        \"aria-live\": \"polite\",\n        ...parts.valueText.attrs\n      });\n    },\n    getTrackProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getTrackId(scope),\n        ...parts.track.attrs,\n        ...progressbarProps\n      });\n    },\n    getRangeProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.range.attrs,\n        \"data-orientation\": orientation,\n        \"data-state\": progressState,\n        style: {\n          [computed(\"isHorizontal\") ? \"width\" : \"height\"]: indeterminate ? void 0 : `${percent}%`\n        }\n      });\n    },\n    getCircleProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getCircleId(scope),\n        ...parts.circle.attrs,\n        ...progressbarProps,\n        ...circleProps2.root\n      });\n    },\n    getCircleTrackProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        \"data-orientation\": orientation,\n        ...parts.circleTrack.attrs,\n        ...circleProps2.track\n      });\n    },\n    getCircleRangeProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.circleRange.attrs,\n        ...circleProps2.range,\n        \"data-state\": progressState\n      });\n    },\n    getViewProps(props2) {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.view.attrs,\n        \"data-state\": props2.state,\n        hidden: props2.state !== progressState\n      });\n    }\n  };\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nvar circleProps = {\n  style: {\n    \"--radius\": \"calc(var(--size) / 2 - var(--thickness) / 2)\",\n    cx: \"calc(var(--size) / 2)\",\n    cy: \"calc(var(--size) / 2)\",\n    r: \"var(--radius)\",\n    fill: \"transparent\",\n    strokeWidth: \"var(--thickness)\"\n  }\n};\nvar rootProps = {\n  style: {\n    width: \"var(--size)\",\n    height: \"var(--size)\"\n  }\n};\nfunction getCircleProps(service) {\n  const { context, computed } = service;\n  return {\n    root: rootProps,\n    track: circleProps,\n    range: {\n      opacity: context.get(\"value\") === 0 ? 0 : void 0,\n      style: {\n        ...circleProps.style,\n        \"--percent\": computed(\"percent\"),\n        \"--circumference\": `calc(2 * 3.14159 * var(--radius))`,\n        \"--offset\": `calc(var(--circumference) * (100 - var(--percent)) / 100)`,\n        strokeDashoffset: `calc(var(--circumference) * ((100 - var(--percent)) / 100))`,\n        strokeDasharray: computed(\"isIndeterminate\") ? void 0 : `var(--circumference)`,\n        transformOrigin: \"center\",\n        transform: \"rotate(-90deg)\"\n      }\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.createMachine)({\n  props({ props: props2 }) {\n    const min = props2.min ?? 0;\n    const max = props2.max ?? 100;\n    return {\n      orientation: \"horizontal\",\n      ...props2,\n      max,\n      min,\n      defaultValue: props2.defaultValue !== void 0 ? props2.defaultValue : midValue(min, max),\n      formatOptions: {\n        style: \"percent\",\n        ...props2.formatOptions\n      },\n      translations: {\n        value: ({ value, percent, formatter }) => {\n          if (value === null) return \"loading...\";\n          if (formatter) {\n            const formatOptions = formatter.resolvedOptions();\n            const num = formatOptions.style === \"percent\" ? percent / 100 : value;\n            return formatter.format(num);\n          }\n          return value.toString();\n        },\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  entry: [\"validateContext\"],\n  context({ bindable, prop }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      }))\n    };\n  },\n  computed: {\n    isIndeterminate: ({ context }) => context.get(\"value\") === null,\n    percent({ context, prop }) {\n      const value = context.get(\"value\");\n      if (!(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(value)) return -1;\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValuePercent)(value, prop(\"min\"), prop(\"max\")) * 100;\n    },\n    formatter: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.memo)(\n      ({ prop }) => [prop(\"locale\"), prop(\"formatOptions\")],\n      (locale, formatOptions) => new Intl.NumberFormat(locale, formatOptions)\n    ),\n    isHorizontal: ({ prop }) => prop(\"orientation\") === \"horizontal\"\n  },\n  states: {\n    idle: {\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      setValue: ({ context, event, prop }) => {\n        const value = event.value === null ? null : Math.max(0, Math.min(event.value, prop(\"max\")));\n        context.set(\"value\", value);\n      },\n      validateContext: ({ context, prop }) => {\n        const max = prop(\"max\");\n        const min = prop(\"min\");\n        const value = context.get(\"value\");\n        if (value == null) return;\n        if (!isValidNumber(max)) {\n          throw new Error(`[progress] The max value passed \\`${max}\\` is not a valid number`);\n        }\n        if (!isValidMax(value, max)) {\n          throw new Error(`[progress] The value passed \\`${value}\\` exceeds the max value \\`${max}\\``);\n        }\n        if (!isValidMin(value, min)) {\n          throw new Error(`[progress] The value passed \\`${value}\\` exceeds the min value \\`${min}\\``);\n        }\n      }\n    }\n  }\n});\nvar isValidNumber = (max) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(max) && !isNaN(max);\nvar isValidMax = (value, max) => isValidNumber(value) && value <= max;\nvar isValidMin = (value, min) => isValidNumber(value) && value >= min;\nvar midValue = (min, max) => min + (max - min) / 2;\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"max\",\n  \"min\",\n  \"orientation\",\n  \"translations\",\n  \"value\",\n  \"onValueChange\",\n  \"defaultValue\",\n  \"formatOptions\",\n  \"locale\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@zag-js+progress@1.21.7/node_modules/@zag-js/progress/dist/index.mjs\n");

/***/ })

};
;