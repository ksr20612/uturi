"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js+file-utils@1.21.7";
exports.ids = ["vendor-chunks/@zag-js+file-utils@1.21.7"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@zag-js+file-utils@1.21.7/node_modules/@zag-js/file-utils/dist/index.mjs":
/*!*********************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@zag-js+file-utils@1.21.7/node_modules/@zag-js/file-utils/dist/index.mjs ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataURItoBlob: () => (/* binding */ dataURItoBlob),\n/* harmony export */   downloadFile: () => (/* binding */ downloadFile),\n/* harmony export */   getAcceptAttrString: () => (/* binding */ getAcceptAttrString),\n/* harmony export */   getFileDataUrl: () => (/* binding */ getFileDataUrl),\n/* harmony export */   getFileEntries: () => (/* binding */ getFileEntries),\n/* harmony export */   getFileMimeType: () => (/* binding */ getFileMimeType),\n/* harmony export */   getTotalFileSize: () => (/* binding */ getTotalFileSize),\n/* harmony export */   isFileEqual: () => (/* binding */ isFileEqual),\n/* harmony export */   isValidFileSize: () => (/* binding */ isValidFileSize),\n/* harmony export */   isValidFileType: () => (/* binding */ isValidFileType)\n/* harmony export */ });\n// src/data-transfer.ts\nvar getItemEntry = (item) => typeof item.getAsEntry === \"function\" ? item.getAsEntry() : typeof item.webkitGetAsEntry === \"function\" ? item.webkitGetAsEntry() : null;\nvar isDirectoryEntry = (entry) => entry.isDirectory;\nvar isFileEntry = (entry) => entry.isFile;\nvar addRelativePath = (file, path) => {\n  Object.defineProperty(file, \"relativePath\", { value: path ? `${path}/${file.name}` : file.name });\n  return file;\n};\nvar getFileEntries = (items, traverseDirectories) => Promise.all(\n  Array.from(items).filter((item) => item.kind === \"file\").map((item) => {\n    const entry = getItemEntry(item);\n    if (!entry) return null;\n    if (isDirectoryEntry(entry) && traverseDirectories) {\n      return getDirectoryFiles(entry.createReader(), `${entry.name}`);\n    }\n    if (isFileEntry(entry) && typeof item.getAsFile === \"function\") {\n      const file = item.getAsFile();\n      return Promise.resolve(file ? addRelativePath(file, \"\") : null);\n    }\n    if (isFileEntry(entry)) {\n      return new Promise((resolve) => {\n        entry.file((file) => {\n          resolve(addRelativePath(file, \"\"));\n        });\n      });\n    }\n  }).filter((b) => b)\n);\nvar getDirectoryFiles = (reader, path = \"\") => new Promise((resolve) => {\n  const entryPromises = [];\n  const readDirectoryEntries = () => {\n    reader.readEntries((entries) => {\n      if (entries.length === 0) {\n        resolve(Promise.all(entryPromises).then((entries2) => entries2.flat()));\n        return;\n      }\n      const promises = entries.map((entry) => {\n        if (!entry) return null;\n        if (isDirectoryEntry(entry)) {\n          return getDirectoryFiles(entry.createReader(), `${path}${entry.name}`);\n        }\n        if (isFileEntry(entry)) {\n          return new Promise((resolve2) => {\n            entry.file((file) => {\n              resolve2(addRelativePath(file, path));\n            });\n          });\n        }\n      }).filter((b) => b);\n      entryPromises.push(Promise.all(promises));\n      readDirectoryEntries();\n    });\n  };\n  readDirectoryEntries();\n});\n\n// src/data-url-to-blob.ts\nfunction dataURItoBlob(uri) {\n  const binary = atob(uri.split(\",\")[1]);\n  const mimeString = uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n  const buffer = new ArrayBuffer(binary.length);\n  const intArray = new Uint8Array(buffer);\n  for (let i = 0; i < binary.length; i++) {\n    intArray[i] = binary.charCodeAt(i);\n  }\n  return new Blob([buffer], { type: mimeString });\n}\n\n// src/download-file.ts\nvar BOM_REGEX = /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i;\nvar MAC_REGEX = /Macintosh/;\nvar APPLE_WEBKIT_REGEX = /AppleWebKit/;\nvar SAFARI_REGEX = /Safari/;\nfunction getBlob(blobOrString, type, appendBOM) {\n  let blob = typeof blobOrString === \"string\" ? new Blob([blobOrString], { type }) : blobOrString;\n  if (appendBOM && BOM_REGEX.test(blob.type)) {\n    return new Blob([String.fromCharCode(65279), blob], { type: blob.type });\n  }\n  return blob;\n}\nfunction isMSEdge(win) {\n  return Boolean(win.navigator && win.navigator.msSaveOrOpenBlob);\n}\nfunction isWebView(win) {\n  return win.navigator && MAC_REGEX.test(win.navigator.userAgent) && APPLE_WEBKIT_REGEX.test(win.navigator.userAgent) && !SAFARI_REGEX.test(win.navigator.userAgent);\n}\nfunction downloadFile(options) {\n  const { file, win = window, type, name, appendBOM, revokeTimeout = 0 } = options;\n  const doc = win.document;\n  const blob = getBlob(file, type, appendBOM);\n  const fileName = (file instanceof File ? name || file.name : name) || \"file-download\";\n  if (isMSEdge(win)) {\n    win.navigator.msSaveOrOpenBlob(blob, fileName);\n    return;\n  }\n  const isMacOSWebView = isWebView(win);\n  const anchor = doc.createElement(\"a\");\n  const canUseDownload = \"download\" in anchor && !isMacOSWebView;\n  if (canUseDownload) {\n    const url2 = win.URL.createObjectURL(blob);\n    anchor.href = url2;\n    anchor.rel = \"noopener\";\n    anchor.download = fileName;\n    anchor.style.display = \"none\";\n    doc.body.appendChild(anchor);\n    anchor.dispatchEvent(new win.MouseEvent(\"click\"));\n    setTimeout(() => {\n      win.URL.revokeObjectURL(url2);\n      anchor.remove();\n    }, revokeTimeout);\n    return;\n  }\n  const url = win.URL.createObjectURL(blob);\n  const popup = win.open(url, \"_blank\");\n  if (!popup) {\n    win.location.href = url;\n  }\n  setTimeout(() => {\n    win.URL.revokeObjectURL(url);\n  }, revokeTimeout);\n}\n\n// src/get-accept-attr.ts\nfunction isMIMEType(v) {\n  return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || /\\w+\\/[-+.\\w]+/g.test(v);\n}\nfunction isExt(v) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\nvar isValidMIME = (v) => isMIMEType(v) || isExt(v);\nfunction getAcceptAttrString(accept) {\n  if (accept == null) return;\n  if (typeof accept === \"string\") {\n    return accept;\n  }\n  if (Array.isArray(accept)) {\n    return accept.filter(isValidMIME).join(\",\");\n  }\n  return Object.entries(accept).reduce((a, [mimeType, ext]) => [...a, mimeType, ...ext], []).filter(isValidMIME).join(\",\");\n}\n\n// src/get-file-data-url.ts\nvar getFileDataUrl = async (file) => {\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort();\n      reject(new Error(\"There was an error reading a file\"));\n    };\n    reader.onloadend = () => {\n      const { result } = reader;\n      if (result instanceof ArrayBuffer) {\n        reject(new Error(\"Expected DataURL as string from Blob/File, got ArrayBuffer\"));\n      } else {\n        resolve(result || void 0);\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n};\n\n// src/get-total-file-size.ts\nvar getTotalFileSize = (files) => {\n  return files.reduce((acc, file) => acc + file.size, 0);\n};\n\n// src/is-file-equal.ts\nvar isFileEqual = (file1, file2) => {\n  return file1.name === file2.name && file1.size === file2.size && file1.type === file2.type;\n};\n\n// src/is-valid-file-size.ts\nvar isDefined = (v) => v !== void 0 && v !== null;\nfunction isValidFileSize(file, minSize, maxSize) {\n  if (isDefined(file.size)) {\n    if (isDefined(minSize) && isDefined(maxSize)) {\n      if (file.size > maxSize) return [false, \"FILE_TOO_LARGE\"];\n      if (file.size < minSize) return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(minSize) && file.size < minSize) {\n      return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(maxSize) && file.size > maxSize) {\n      return [false, \"FILE_TOO_LARGE\"];\n    }\n  }\n  return [true, null];\n}\n\n// src/mime-types.ts\nvar mimeTypes = \"3g2_video/3gpp2[3gp,3gpp_video/3gpp[3mf_model/3mf[7z_application/x-7z-compressed[aac_audio/aac[ac_application/pkix-attr-cert[adp_audio/adpcm[adts_audio/aac[ai_application/postscript[aml_application/automationml-aml+xml[amlx_application/automationml-amlx+zip[amr_audio/amr[apk_application/vnd.android.package-archive[apng_image/apng[appcache,manifest_text/cache-manifest[appinstaller_application/appinstaller[appx_application/appx[appxbundle_application/appxbundle[asc_application/pgp-keys[atom_application/atom+xml[atomcat_application/atomcat+xml[atomdeleted_application/atomdeleted+xml[atomsvc_application/atomsvc+xml[au,snd_audio/basic[avi_video/x-msvideo[avci_image/avci[avcs_image/avcs[avif_image/avif[aw_application/applixware[bdoc_application/bdoc[bin,bpk,buffer,deb,deploy,dist,distz,dll,dmg,dms,dump,elc,exe,img,iso,lrf,mar,msi,msm,msp,pkg,so_application/octet-stream[bmp,dib_image/bmp[btf,btif_image/prs.btif[bz2_application/x-bzip2[c_text/x-c[ccxml_application/ccxml+xml[cdfx_application/cdfx+xml[cdmia_application/cdmi-capability[cdmic_application/cdmi-container[cdmid_application/cdmi-domain[cdmio_application/cdmi-object[cdmiq_application/cdmi-queue[cer_application/pkix-cert[cgm_image/cgm[cjs_application/node[class_application/java-vm[coffee,litcoffee_text/coffeescript[conf,def,in,ini,list,log,text,txt_text/plain[cpp,cxx,cc_text/x-c++src[cpl_application/cpl+xml[cpt_application/mac-compactpro[crl_application/pkix-crl[css_text/css[csv_text/csv[cu_application/cu-seeme[cwl_application/cwl[cww_application/prs.cww[davmount_application/davmount+xml[dbk_application/docbook+xml[doc_application/msword[docx_application/vnd.openxmlformats-officedocument.wordprocessingml.document[dsc_text/prs.lines.tag[dssc_application/dssc+der[dtd_application/xml-dtd[dwd_application/atsc-dwd+xml[ear,jar,war_application/java-archive[ecma_application/ecmascript[emf_image/emf[eml,mime_message/rfc822[emma_application/emma+xml[emotionml_application/emotionml+xml[eot_application/vnd.ms-fontobject[eps,ps_application/postscript[epub_application/epub+zip[exi_application/exi[exp_application/express[exr_image/aces[ez_application/andrew-inset[fdf_application/fdf[fdt_application/fdt+xml[fits_image/fits[flac_audio/flac[flv_video/x-flv[g3_image/g3fax[geojson_application/geo+json[gif_image/gif[glb_model/gltf-binary[gltf_model/gltf+json[gml_application/gml+xml[go_text/x-go[gpx_application/gpx+xml[gz_application/gzip[h_text/x-h[h261_video/h261[h263_video/h263[h264_video/h264[heic_image/heic[heics_image/heic-sequence[heif_image/heif[heifs_image/heif-sequence[htm,html,shtml_text/html[ico_image/x-icon[icns_image/x-icns[ics,ifb_text/calendar[iges,igs_model/iges[ink,inkml_application/inkml+xml[ipa_application/octet-stream[java_text/x-java-source[jp2,jpg2_image/jp2[jpeg,jpe,jpg_image/jpeg[jpf,jpx_image/jpx[jpm,jpgm_image/jpm[jpgv_video/jpeg[jph_image/jph[js,mjs_text/javascript[json_application/json[json5_application/json5[jsonld_application/ld+json[jsx_text/jsx[jxl_image/jxl[jxr_image/jxr[ktx_image/ktx[ktx2_image/ktx2[less_text/less[m1v,m2v,mpe,mpeg,mpg_video/mpeg[m4a_audio/mp4[m4v_video/x-m4v[md,markdown_text/markdown[mid,midi,kar,rmi_audio/midi[mkv_video/x-matroska[mp2,mp2a,mp3,mpga,m3a,m2a_audio/mpeg[mp4,mp4v,mpg4_video/mp4[mp4a_audio/mp4[mp4s,m4p_application/mp4[odp_application/vnd.oasis.opendocument.presentation[oda_application/oda[ods_application/vnd.oasis.opendocument.spreadsheet[odt_application/vnd.oasis.opendocument.text[oga,ogg,opus,spx_audio/ogg[ogv_video/ogg[ogx_application/ogg[otf_font/otf[p12,pfx_application/x-pkcs12[pdf_application/pdf[pem_application/x-pem-file[php_text/x-php[png_image/png[ppt_application/vnd.ms-powerpoint[pptx_application/vnd.openxmlformats-officedocument.presentationml.presentation[pskcxml_application/pskc+xml[psd_image/vnd.adobe.photoshop[py_text/x-python[qt,mov_video/quicktime[rar_application/vnd.rar[rdf_application/rdf+xml[rtf_text/rtf[sass_text/x-sass[scss_text/x-scss[sgm,sgml_text/sgml[sh_application/x-sh[svg,svgz_image/svg+xml[swf_application/x-shockwave-flash[tar_application/x-tar[tif,tiff_image/tiff[toml_application/toml[ts_video/mp2t[tsx_text/tsx[tsv_text/tab-separated-values[ttc_font/collection[ttf_font/ttf[vtt_text/vtt[wasm_application/wasm[wav_audio/wav[weba_audio/webm[webm_video/webm[webmanifest_application/manifest+json[webp_image/webp[wma_audio/x-ms-wma[wmv_video/x-ms-wmv[woff_font/woff[woff2_font/woff2[xls_application/vnd.ms-excel[xlsx_application/vnd.openxmlformats-officedocument.spreadsheetml.sheet[xml_application/xml[xz_application/x-xz[yaml,yml_text/yaml[zip_application/zip\";\nvar mimeTypesMap = new Map(\n  mimeTypes.split(\"[\").flatMap((mime) => {\n    const [extensions, mimeType] = mime.split(\"_\");\n    return extensions.split(\",\").map((ext) => [ext, mimeType]);\n  })\n);\n\n// src/get-file-mime-type.ts\nfunction getFileMimeType(name) {\n  const extension = name.split(\".\").pop();\n  return extension ? mimeTypesMap.get(extension) || null : null;\n}\n\n// src/is-valid-file-type.ts\nfunction isFileAccepted(file, accept) {\n  if (file && accept) {\n    const types = Array.isArray(accept) ? accept : typeof accept === \"string\" ? accept.split(\",\") : [];\n    if (types.length === 0) return true;\n    const fileName = file.name || \"\";\n    const mimeType = (file.type || getFileMimeType(fileName) || \"\").toLowerCase();\n    const baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    return types.some((type) => {\n      const validType = type.trim().toLowerCase();\n      if (validType.charAt(0) === \".\") {\n        return fileName.toLowerCase().endsWith(validType);\n      }\n      if (validType.endsWith(\"/*\")) {\n        return baseMimeType === validType.replace(/\\/.*$/, \"\");\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n}\nfunction isValidFileType(file, accept) {\n  const isAcceptable = file.type === \"application/x-moz-file\" || isFileAccepted(file, accept);\n  return [isAcceptable, isAcceptable ? null : \"FILE_INVALID_TYPE\"];\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@zag-js+file-utils@1.21.7/node_modules/@zag-js/file-utils/dist/index.mjs\n");

/***/ })

};
;